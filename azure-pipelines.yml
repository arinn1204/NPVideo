# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  testConfiguration: 'Release'
  db_catalog: $(production_catalog)
  db_source: $(production_source)
  db_username: $(service_login)
  db_password: $(service_password)
  test_catalog: $(db_catalog)_test
  test_secret: $(SAMPLE_SECRET)

stages:
- stage: Build_And_Unit_Test
  variables:
    dacpacLocation: 'src\database\VideoDB\bin\$(buildConfiguration)\VideoDB.dacpac'
  jobs:
  - job: Database
    variables:
      sqlproj: 'src\database\VideoDB\VideoDB.sqlproj'
      dbLocation: src\database
      unitTestName: VideoDB.UnitTests
      unitTestProj: '$(dbLocation)\$(unitTestName)\$(unitTestName).csproj'
      assemblyLocation: $(dbLocation)\$(unitTestName)\bin\$(testConfiguration)
    steps:
    - task: MSBuild@1
      inputs:
        configuration: $(buildConfiguration)
        solution: $(sqlproj)
    - task: CopyFiles@2
      inputs:
        contents: $(dacpacLocation)
        targetFolder: $(Build.ArtifactStagingDirectory)\VideoDbDacPac
    - task: SqlAzureDacpacDeployment@1
      inputs:
        azureSubscription: $(azure_subscription)
        authenticationType: aadAuthenticationPassword
        serverName: $(db_source)
        databaseName: $(test_catalog)
        aadSqlUsername: $(db_username)
        aadSqlPassword: $(db_password)
        deployType: DacpacTask
        deploymentAction: Publish
        dacpacFile: $(dacpacLocation) 
    - task: NuGetCommand@2
      inputs:
        command: restore
        restoreSolution: $(unitTestProj)
        feedsToUse: Select
        includeNuGetOrg: true
        restoreDirectory: '$(Build.SourcesDirectory)\src\packages'
    - task: MSBuild@1
      inputs:
        configuration: $(testConfiguration)
        solution: $(unitTestProj)
    - task: VSTest@2
      inputs:
        testSelector: testAssemblies
        testAssemblyVer2: '$(unitTestName).dll'
        searchFolder: $(assemblyLocation)
        configuration: $(testConfiguration)
        overrideTestrunParameters: '-override_connection_string true -db_password $(db_password)'
    - publish:  $(Build.ArtifactStagingDirectory)\VideoDbDacPac\*
      artifact: VideoDbDacpac     
  - job: WebApi
    variables:
      apiProjName: 'VideoDB.WebApi'
      unitTestProjName: VideoDB.WebApi.Tests
      apiProjDirectory: 'src\main\$(apiProjName)'
      unitTestDirectory: 'src\test\$(unitTestProjName)'
      solution: 'src\VideoDB.sln'
      apiProject: $(apiProjDirectory)\$(apiProjName).csproj
      unitTestProject: $(unitTestDirectory)\$(unitTestProjName).csproj
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: restore
        projects: $(solution)
    - task: DotNetCoreCLI@2
      inputs:
        command: build
        projects: $(unitTestProject)
        arguments: '-c $(testConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: test
        projects: $(unitTestProject)
        arguments: '-c $(testConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: build
        projects: $(apiProject)
        arguments: '-c $(buildConfiguration)'    
    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        projects: $(apiProject)
        arguments: '-c $(buildConfiguration)'    
    - task: CopyFiles@2
      inputs:
        contents: '$(apiProjDirectory)\bin\$(buildConfiguration)\netcoreapp3.0\publish.zip'
        targetFolder: $(Build.ArtifactStagingDirectory)\WebApi
    - publish: $(Build.ArtifactStagingDirectory)\WebApi\*
      artifact: WebApi
- stage: Integration_Test
  dependsOn: Build_And_Unit_Test
  variables:
      intTestProjName: VideoDB.WebApi.Tests.Integration
      intTestDirectory: 'src\test\$(intTestProjName)'
      intTestProj: $(intTestDirectory)\$(intTestProjName).csproj
  jobs:
  - job: WebApiIntegrationTest
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: restore
        projects: $(intTestProj)
    - task: DotNetCoreCLI@2
      inputs:
        command: build
        projects: $(intTestProj)
        arguments: '-c $(testConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: test
        projects: $(intTestProj)
        arguments: '-c $(testConfiguration)'   
  - job: DeployDevDatabase
    steps:
    - download: current
      artifact: VideoDbDacpac
    - task: SqlAzureDacpacDeployment@1
      inputs:
        azureSubscription: $(azure_subscription)
        authenticationType: aadAuthenticationPassword
        serverName: $(db_source)
        databaseName: $(db_catalog)_dev
        aadSqlUsername: $(db_username)
        aadSqlPassword: $(db_password)
        deployType: DacpacTask
        deploymentAction: Publish
        dacpacFile: $(Pipeline.Workspace)\VideoDbDacPac
- stage: Deployment
  dependsOn: Integration_Test
  jobs:
  - job: DeployWebApi
    steps:
    - download: current
      artifact: WebApi
    - task: AzureWebApp@1
      inputs:
        azureSubscription: '$(azure_subscription)'
        package: '$(Pipeline.Workspace)\WebApi'
        appName: 'VideoDB WebApi'
  - job: DeployDatabase
    steps:
    - download: current
      artifact: VideoDbDacpac
    - task: SqlAzureDacpacDeployment@1
      inputs:
        azureSubscription: $(azure_subscription)
        authenticationType: aadAuthenticationPassword
        serverName: $(db_source)
        databaseName: $(db_catalog)
        aadSqlUsername: $(db_username)
        aadSqlPassword: $(db_password)
        deployType: DacpacTask
        deploymentAction: Publish
        dacpacFile: '$(Pipeline.Workspace)\VideoDbDacpac'